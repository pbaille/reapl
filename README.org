#+title: Reapl

* Reapl, a reaper REPL

The goal of this project is to implement a reaper REPL that speaks lisp.

** Reaper

[[https://www.reaper.fm/][Reaper]] is an highly extensible DAW.
It is scriptable using the [[https://www.lua.org/][Lua language]].

** Fennel

[[https://fennel-lang.org/][Fennel]] is a lisp that compiles to lua.
Therefore it is the perfect tool for creating a lisp repl for reaper.

** Setup

*** Prerequisites

- [[https://reapack.com/][reapack]]

*** Reaper

In reaper 7.x, go to Extensions > ReaPack > Import repositories...

paste this url: =https://raw.githubusercontent.com/pbaille/reapl/main/index.xml=

Now, the =pbaille_start fennel repl= should be available.

Once triggered, a console window will appear:

[[file:resources/repl_window.png]]

** Usage

Now in order to talk with it, you will have to send messages to =http://localhost:9999= and eventually listen to =http://localhost:9997= for return values.

2 options are available in order to do so:

*** from a clojure repl

clone this repo

=git clone git@github.com:pbaille/reapl.git=

launch a repl

#+begin_src clojure
(require '[reapl.interop :refer [<<]])
(<< (reaper.GetAppVersion))
;; => "7.x/xxx"
#+end_src

There is some sample expressions to evaluate in =src/clojure/reapl/scratch.clj=

*** from emacs

load the =src/elisp/reapl-interop.el= file into emacs
use the =pb/send-fnl-s-expression-to-reaper-socket-repl= function to send thing at point to reaper
